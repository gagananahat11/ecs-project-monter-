name: Push Docker Image to ECR (OIDC)

on:
  push:
    branches:
      - devops
      - release
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    permissions:
      id-token: write   # Required for OIDC
      contents: read

    env:
      AWS_ACCOUNT_ID: 963057650842          # Replace with your AWS Account ID
      AWS_REGION: us-east-1
      ECR_REPO_NAME: my-sample-repo          # Replace with your ECR repo name
      #
    steps:
      # -------------------- STEP 1 --------------------
      - name: Checkout code
        uses: actions/checkout@v4
      #
      # -------------------- STEP 2 --------------------
      - name: Set Build Parameters
        id: buildinfo
        run: |
          set -e
          BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD | sed 's/\//_/g')
          COMMIT_SHA=$(git rev-parse --short HEAD)
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "COMMIT_SHA=$COMMIT_SHA" >> $GITHUB_ENV
          echo "✅ Branch: $BRANCH_NAME"
          echo "✅ Commit: $COMMIT_SHA"

      # -------------------- STEP 3 --------------------
      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::963057650842:role/ecr-access  # Replace with your OIDC IAM Role ARN
          aws-region: ${{ env.AWS_REGION }}

      # -------------------- STEP 4 --------------------
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # -------------------- STEP 5 --------------------
      - name: Build and Push Docker Image
        run: |
          set -e
          IMAGE_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:latest
          echo "Building Docker image: $IMAGE_URI"
          docker build -t $IMAGE_URI ./app 
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV
          echo "✅ Docker image pushed successfully!"
